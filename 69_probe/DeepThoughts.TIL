In a plaintext file with proper heading and a reprinting of your Knight’s Tour execution time measurements, respond to each prompt below.
q0: From any starting position, can an open tour always be found? Explain.
q1: Same, but for closed tour.
q2: How do you explain the increase in execution time as n increases?
q3: Thoughts on optimization?
State your cleanest algo for finding your way out of a maze (of the “2D” style discussed in class).



Mean execution times for boards of size n*n:
n=5   3s    across 1 executions
n=6   30s    across 1 executions
n=7   250s    across 1 executions
n=8   789s    across 1 executions


q0. No, the corners would not work because you would need to exit and enter them twice.

q1. Yes, but only if the corners are kept open so you can return to them

q2. For evey additional size increase you are adding n+n-1 more knights, so it has to probe a lot more.

q3. We could have it avoid the corner exit and entrance squares since that often breaks the algorithm


Cleanest algo:

Always turn right, if we can't, go straight until we can, if we reach a corner turn left until we can go up.



































